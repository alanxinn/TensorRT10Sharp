<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>net6.0</TargetFramework>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <PlatformTarget>x64</PlatformTarget>
    <OutputType>Library</OutputType>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <GenerateAssemblyInfo>false</GenerateAssemblyInfo>
  </PropertyGroup>

  <PropertyGroup>
    <AssemblyTitle>TensorRT10Sharp C#</AssemblyTitle>
    <Product>TensorRT10Sharp</Product>
    <Description>TensorRT10 wrapper for .NET - 为.NET平台提供的NVIDIA TensorRT10封装库</Description>
    <Authors>TensorRTSharp Team</Authors>
    <Company>TensorRTSharp</Company>
    <PackageId>alanxinn.TensorRT10Sharp</PackageId>
    <PackageVersion>0.1.0</PackageVersion>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <PackageProjectUrl>https://github.com/alanxinn/TensorRT10Sharp</PackageProjectUrl>
    <RepositoryUrl>https://github.com/alanxinn/TensorRT10Sharp</RepositoryUrl>
    <RepositoryType>git</RepositoryType>
    <PackageTags>tensorrt;tensorrt10;cuda;deep-learning;inference;gpu;csharp;dotnet</PackageTags>
    <Copyright>Copyright © alanxinn Team 2025</Copyright>
  </PropertyGroup>

  <ItemGroup>
    <None Include="..\trt10.dll" Condition="Exists('..\trt10.dll')">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <Link>trt10.dll</Link>
    </None>
    <None Include="..\Assets\*.*" Exclude="..\Assets\*.onnx;..\Assets\*.engine">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <Link>Assets\%(Filename)%(Extension)</Link>
    </None>
  </ItemGroup>

  <ItemGroup>
    <Content Include="..\Documentation\*.md">
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
    </Content>
  </ItemGroup>

  <!-- 开发时包含大型模型文件，但不复制到输出目录 -->
  <ItemGroup>
    <None Include="..\Assets\*.onnx" Condition="Exists('..\Assets\*.onnx')">
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
    </None>
    <None Include="..\Assets\*.engine" Condition="Exists('..\Assets\*.engine')">
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
    </None>
  </ItemGroup>

</Project> 